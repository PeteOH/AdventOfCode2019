ROUTINE AOC2019.D02

#include %systemInclude

runD02() public {


    w !,"Part 1: "_$$getD02Out(12,2)

    set bfound = 0
    for noun=0:1:99 {
        for verb=0:1:99 {
            set output = $$getD02Out(noun,verb)
            if output = 19690720 {
                set bfound = 1
                Quit
            }
        }
        Quit:bfound
    }


    w !,"Part 2: "_noun_verb
    return ("")
}

getData() public {
    
    return $Listbuild(1,0,0,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,10,19,1,19,5,23,2,23,9,27,1,5,27,31,1,9,31,35,1,35,10,39,2,13,39,43,1,43,9,47,1,47,9,51,1,6,51,55,1,13,55,59,1,59,13,63,1,13,63,67,1,6,67,71,1,71,13,75,2,10,75,79,1,13,79,83,1,83,10,87,2,9,87,91,1,6,91,95,1,9,95,99,2,99,10,103,1,103,5,107,2,6,107,111,1,111,6,115,1,9,115,119,1,9,119,123,2,10,123,127,1,127,5,131,2,6,131,135,1,135,5,139,1,9,139,143,2,143,13,147,1,9,147,151,1,151,2,155,1,9,155,0,99,2,0,14,0)
    //return $Listbuild(2,4,4,5,99,0)
    //return $Listbuild(1,1,1,4,99,5,6,0,99)
    //return $Listbuild(1,0,0,3,1,1,2,3,1,3,4,3,1,5,0,3,2,1,10,19,1,19,5,23,2,23,9,27,1,5,27,31,1,9,31,35,1,35,10,39,2,13,39,43,1,43,9,47,1,47,9,51,1,6,51,55,1,13,55,59,1,59,13,63,1,13,63,67,1,6,67,71,1,71,13,75,2,10,75,79,1,13,79,83,1,83,10,87,2,9,87,91,1,6,91,95,1,9,95,99,2,99,10,103,1,103,5,107,2,6,107,111,1,111,6,115,1,9,115,119,1,9,119,123,2,10,123,127,1,127,5,131,2,6,131,135,1,135,5,139,1,9,139,143,2,143,13,147,1,9,147,151,1,151,2,155,1,9,155,0,99,2,0,14,0)

}

getD02Out(noun, verb) {
    
    set positions = $$getData()

    set $li(positions, 2) = noun
    set $li(positions, 3) = verb

    set iPtr = 1

    //w !,"Starting Positions"
    //w !,$LTS(positions,",")

    while $li(positions, iPtr) '= 99 {
        set op = $li(positions, iPtr)
        set valptr1 = $li(positions, iPtr+1)
        set valptr2 = $li(positions, iPtr+2)
        set outptr = $li(positions, iPtr+3)
        set val1 = $li(positions, valptr1+1)
        set val2 = $li(positions, valptr2+1)


        set:op=1 out=(val1 + val2)
        set:op=2 out=(val1 * val2)

        set $li(positions, outptr+1) = out

        //w !,"iPtr: "_iPtr_", op "_op_", val1 "_val1_", val2 "_val2_", outptr "_outptr_", out "_out

        do $Increment(iPtr,4)
    }
    return $li(positions, 1)
}
